from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *

class MainApp(QMainWindow):
    def __init__(self, parent=None, *args):
        super(MainApp, self).__init__(parent=parent)

        self.setFixedSize(500, 300)
        self.setWindowTitle("Primera App")
        # self.setMinimumSize(500, 300)
        # self.setMaximumSize(700, 500)

        width = self.frameGeometry().width() #obtiene el valor del tamaño de la ventana
        height = self.frameGeometry().height() #obtiene el valor del tamaño de la ventana

        label = QLabel("Primer label", self) #crea un label
        #label.setGeometry(0, 0, 100, 50) #posicion x, posicion y, largo y alto
        label.setStyleSheet("background:#424242; color:white") #estilo del label
        label.setAlignment(Qt.AlignCenter) #cambia la ubicacion del texto, si queremos mas manejo de la ubicacion usamoes esto (Qt.AlignCenter | Qt.AlignCenter)

        self.setCentralWidget(label) # me cambia el tamaño del label al tamaño de la ventana

if __name__ == '__main__':
    app = QApplication([]) #inicia la app, esto solo se puede instanciar una vez
    window = MainApp() #crea la ventana
    window.show() #la muestra
    app.exec_()#con esto iniciamos un ciclo de eventos




#instancia
#class Padre(object):
#    def __init__(self, *arg):
#        super(Padre, self).__init__()
#        print("clase instanciada")
#    
#    def saludar(self, param=""):
#        return "hola " + param

#hijo = Padre()
#print(hijo.saludar("manuel"))




==============================
Para hacer que tu sensor LiDAR lea datos y los guarde en un archivo de texto (txt) con Python, primero necesitarás asegurarte de que el sensor esté conectado correctamente a tu computadora y de que tienes instalada la librería necesaria para interactuar con él. Una vez hecho esto, puedes seguir los siguientes pasos:

Importa la librería necesaria para interactuar con el sensor LiDAR en Python. Por ejemplo, si estás utilizando el sensor LiDAR Velodyne VLP-16, puedes usar la librería "pyvista" para interactuar con él:

import pyvista as pv

Configura el sensor LiDAR para que comience a capturar datos. Esto puede variar dependiendo del modelo del sensor LiDAR que estés utilizando. En el caso del Velodyne VLP-16, puedes usar el siguiente código para comenzar la captura de datos:

lidar = pv.read("udp://192.168.1.201:2368") # Configura la IP y el puerto adecuado
lidar.plot() # Visualiza los datos en tiempo real (opcional)


Configura la escritura de datos en un archivo de texto (txt) con Python. Puedes usar la función "numpy.savetxt()" para escribir los datos capturados en un archivo de texto. El siguiente código muestra cómo hacerlo:

import numpy as np

# Captura los datos del sensor LiDAR
data = lidar.points

# Escribe los datos capturados en un archivo de texto
np.savetxt("datos_lidar.txt", data, delimiter=",")

Este código guardará los datos capturados en un archivo de texto llamado "datos_lidar.txt", separando cada valor por una coma (",").

Es importante tener en cuenta que la frecuencia de captura del sensor LiDAR puede ser muy alta, por lo que es posible que debas ajustar el código para que escriba los datos en el archivo de texto en intervalos regulares de tiempo, en lugar de escribir todos los datos al mismo tiempo al final de la captura.
============================================================

Para hacer que tu sensor LiDAR SICK lea datos y los guarde en un archivo de texto (txt) con Python, primero necesitarás asegurarte de que el sensor esté conectado correctamente a tu computadora y de que tienes instalada la librería necesaria para interactuar con él. Una vez hecho esto, puedes seguir los siguientes pasos:

Importa la librería necesaria para interactuar con el sensor LiDAR en Python. En el caso de los sensores LiDAR SICK, puedes utilizar la librería "sicktoolbox" para interactuar con ellos:

import sicktoolbox as sick

Configura el sensor LiDAR para que comience a capturar datos. En el caso de los sensores LiDAR SICK, puedes utilizar la función "LMS1xx" para conectarte al sensor y comenzar a capturar datos. El siguiente código muestra cómo hacerlo

# Conectarse al sensor LiDAR SICK
sick_lidar = sick.LMS1xx("192.168.0.1")

# Comenzar la captura de datos
sick_lidar.start()

Configura la escritura de datos en un archivo de texto (txt) con Python. Puedes utilizar la función "open()" para crear un archivo de texto en el que se escribirán los datos capturados. El siguiente código muestra cómo hacerlo:

# Crear un archivo de texto en el que se escribirán los datos
archivo = open("datos_lidar.txt", "w")

# Escribir los datos capturados en el archivo de texto
while True:
    data = sick_lidar.getScan()
    archivo.write(str(data) + "\n")

Este código guardará los datos capturados en un archivo de texto llamado "datos_lidar.txt", separando cada valor por una coma (","). La función "getScan()" devuelve una lista de valores que representan las mediciones realizadas por el sensor LiDAR.

Es importante tener en cuenta que la frecuencia de captura del sensor LiDAR puede ser muy alta, por lo que es posible que debas ajustar el código para que escriba los datos en el archivo de texto en intervalos regulares de tiempo, en lugar de escribir todos los datos al mismo tiempo al final de la captura. Además, es posible que debas agregar una condición de salida para detener la captura de datos cuando sea necesario.







